<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.sznk.terrace.mapper.TbMonitorabnormalMapper" >
  <resultMap id="BaseResultMap" type="cn.sznk.terrace.bean.TbMonitorabnormal" >
    <id column="monitor_ip" property="monitorIp" jdbcType="VARCHAR" />
    <result column="monitor_time" property="monitorTime" jdbcType="TIMESTAMP" />
    <result column="monitor_state" property="monitorState" jdbcType="INTEGER" />
    <result column="monitor_level" property="monitorLevel" jdbcType="VARCHAR" />
    <result column="monitor_group" property="monitorGroup" jdbcType="VARCHAR" />
    <result column="monitor_area" property="monitorArea" jdbcType="VARCHAR" />
    <result column="monitor_type" property="monitorType" jdbcType="VARCHAR" />
    <result column="dept_code" property="deptCode" jdbcType="VARCHAR" />
  </resultMap>
  <!--根据日期查当天的异常设备信息-->
  <select id="todayBadMonitor" parameterType="java.lang.String" resultType="cn.sznk.terrace.bean.TbMonitorabnormal">
    SELECT * FROM tb_monitorabnormal where monitor_time like CONCAT(#{date}, '%') and dept_code=#{code}
  </select>

  <!--根据日期查当天的异常设备个数-->
  <select id="todayBadMonitorNum" parameterType="java.lang.String" resultType="java.lang.Integer">
    SELECT COUNT(*) FROM tb_monitorabnormal where monitor_time like CONCAT(#{date}, '%') and dept_code=#{code}
  </select>

  <!--根据日期和大队  查当天的异常设备信息-->
  <select id="todayBadMonitorMsg" parameterType="java.lang.String" resultType="cn.sznk.terrace.bean.TbMonitorabnormal">
    SELECT * FROM tb_monitorabnormal where monitor_group=#{monitor_group} and monitor_time like CONCAT(#{date}, '%') and dept_code=#{code}
  </select>

  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    monitor_ip, monitor_time, monitor_state, monitor_level, monitor_group, monitor_area, 
    monitor_type, dept_code
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.sznk.terrace.bean.TbMonitorabnormalExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_monitorabnormal
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tb_monitorabnormal
    where monitor_ip = #{monitorIp,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tb_monitorabnormal
    where monitor_ip = #{monitorIp,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.sznk.terrace.bean.TbMonitorabnormalExample" >
    delete from tb_monitorabnormal
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.sznk.terrace.bean.TbMonitorabnormal" >
    insert into tb_monitorabnormal (monitor_ip, monitor_time, monitor_state, 
      monitor_level, monitor_group, monitor_area, 
      monitor_type, dept_code)
    values (#{monitorIp,jdbcType=VARCHAR}, #{monitorTime,jdbcType=TIMESTAMP}, #{monitorState,jdbcType=INTEGER}, 
      #{monitorLevel,jdbcType=VARCHAR}, #{monitorGroup,jdbcType=VARCHAR}, #{monitorArea,jdbcType=VARCHAR}, 
      #{monitorType,jdbcType=VARCHAR}, #{deptCode,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.sznk.terrace.bean.TbMonitorabnormal" >
    insert into tb_monitorabnormal
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="monitorIp != null" >
        monitor_ip,
      </if>
      <if test="monitorTime != null" >
        monitor_time,
      </if>
      <if test="monitorState != null" >
        monitor_state,
      </if>
      <if test="monitorLevel != null" >
        monitor_level,
      </if>
      <if test="monitorGroup != null" >
        monitor_group,
      </if>
      <if test="monitorArea != null" >
        monitor_area,
      </if>
      <if test="monitorType != null" >
        monitor_type,
      </if>
      <if test="deptCode != null" >
        dept_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="monitorIp != null" >
        #{monitorIp,jdbcType=VARCHAR},
      </if>
      <if test="monitorTime != null" >
        #{monitorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="monitorState != null" >
        #{monitorState,jdbcType=INTEGER},
      </if>
      <if test="monitorLevel != null" >
        #{monitorLevel,jdbcType=VARCHAR},
      </if>
      <if test="monitorGroup != null" >
        #{monitorGroup,jdbcType=VARCHAR},
      </if>
      <if test="monitorArea != null" >
        #{monitorArea,jdbcType=VARCHAR},
      </if>
      <if test="monitorType != null" >
        #{monitorType,jdbcType=VARCHAR},
      </if>
      <if test="deptCode != null" >
        #{deptCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.sznk.terrace.bean.TbMonitorabnormalExample" resultType="java.lang.Integer" >
    select count(*) from tb_monitorabnormal
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_monitorabnormal
    <set >
      <if test="record.monitorIp != null" >
        monitor_ip = #{record.monitorIp,jdbcType=VARCHAR},
      </if>
      <if test="record.monitorTime != null" >
        monitor_time = #{record.monitorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.monitorState != null" >
        monitor_state = #{record.monitorState,jdbcType=INTEGER},
      </if>
      <if test="record.monitorLevel != null" >
        monitor_level = #{record.monitorLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.monitorGroup != null" >
        monitor_group = #{record.monitorGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.monitorArea != null" >
        monitor_area = #{record.monitorArea,jdbcType=VARCHAR},
      </if>
      <if test="record.monitorType != null" >
        monitor_type = #{record.monitorType,jdbcType=VARCHAR},
      </if>
      <if test="record.deptCode != null" >
        dept_code = #{record.deptCode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_monitorabnormal
    set monitor_ip = #{record.monitorIp,jdbcType=VARCHAR},
      monitor_time = #{record.monitorTime,jdbcType=TIMESTAMP},
      monitor_state = #{record.monitorState,jdbcType=INTEGER},
      monitor_level = #{record.monitorLevel,jdbcType=VARCHAR},
      monitor_group = #{record.monitorGroup,jdbcType=VARCHAR},
      monitor_area = #{record.monitorArea,jdbcType=VARCHAR},
      monitor_type = #{record.monitorType,jdbcType=VARCHAR},
      dept_code = #{record.deptCode,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.sznk.terrace.bean.TbMonitorabnormal" >
    update tb_monitorabnormal
    <set >
      <if test="monitorTime != null" >
        monitor_time = #{monitorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="monitorState != null" >
        monitor_state = #{monitorState,jdbcType=INTEGER},
      </if>
      <if test="monitorLevel != null" >
        monitor_level = #{monitorLevel,jdbcType=VARCHAR},
      </if>
      <if test="monitorGroup != null" >
        monitor_group = #{monitorGroup,jdbcType=VARCHAR},
      </if>
      <if test="monitorArea != null" >
        monitor_area = #{monitorArea,jdbcType=VARCHAR},
      </if>
      <if test="monitorType != null" >
        monitor_type = #{monitorType,jdbcType=VARCHAR},
      </if>
      <if test="deptCode != null" >
        dept_code = #{deptCode,jdbcType=VARCHAR},
      </if>
    </set>
    where monitor_ip = #{monitorIp,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.sznk.terrace.bean.TbMonitorabnormal" >
    update tb_monitorabnormal
    set monitor_time = #{monitorTime,jdbcType=TIMESTAMP},
      monitor_state = #{monitorState,jdbcType=INTEGER},
      monitor_level = #{monitorLevel,jdbcType=VARCHAR},
      monitor_group = #{monitorGroup,jdbcType=VARCHAR},
      monitor_area = #{monitorArea,jdbcType=VARCHAR},
      monitor_type = #{monitorType,jdbcType=VARCHAR},
      dept_code = #{deptCode,jdbcType=VARCHAR}
    where monitor_ip = #{monitorIp,jdbcType=VARCHAR}
  </update>
</mapper>